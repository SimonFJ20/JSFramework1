(()=>{"use strict";var n,e=function(n){return n.replace(/\r?\n|\r|\s{4}/g,"")},t=function(){function n(){}return n.setTitle=function(n){document.title=n},n.setCssImport=function(n){document.createElement},n}(),i=document.getElementsByTagName("x-app")[0];null!=i?i.innerHTML=(t.setTitle("App"),null!=sessionStorage.getItem("id")&&console.log(sessionStorage.getItem("id")),sessionStorage.setItem("id",function(n){for(var e="",t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",i=0;i<8;i++)e+=t.charAt(Math.floor(Math.random()*t.length));return e}()),console.log(window.location.pathname),e("\n    "+(!1===(n={autherized:!1}).autherized?e('\n        <div id="topbar">\n            <div class="title">\n                <img src="./assets/favicon-32x32.png">\n                <h1>Framework App</h1>\n            </div>\n            <div class="public">\n            </div>\n            <div class="private">\n                <a href="/" class="button">Login</a>\n            </div>\n        </div>\n        '):!0===n.autherized?e('\n        <div id="topbar">\n            <div class="title">\n                <img src="./assets/favicon-32x32.png">\n                <h1>Framework App</h1>\n            </div>\n            <div class="public">\n                <a href="/" class="button">My Profile</a>\n                <a href="/" class="button">My Profile</a>\n                <a href="/" class="button">My Profile</a>\n            </div>\n            <div class="private">\n                <a href="/" class="button">My Profile</a>\n            </div>\n        </div>\n        '):void 0)+"\n    ")):console.log("%c<x-app></x-app>%c is not defined!","color: white; background-color: blue; font-size: 1.2em","color: red; font-size: 1.2em")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wdWJsaWMvLi9zcmMvZnJhbWV3b3JrLnRzIiwid2VicGFjazovL3B1YmxpYy8uL3NyYy9jb21wb25lbnRzL3RvcGJhci50cyIsIndlYnBhY2s6Ly9wdWJsaWMvLi9zcmMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vcHVibGljLy4vc3JjL2FwcC50cyJdLCJuYW1lcyI6WyJwcm9wcyIsImh0bWwiLCJyZXBsYWNlIiwic2V0VGl0bGUiLCJ0aXRsZSIsImRvY3VtZW50Iiwic2V0Q3NzSW1wb3J0IiwidXJsIiwiY3JlYXRlRWxlbWVudCIsImh0bWxBcHBUYWciLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImlubmVySFRNTCIsIkRPTSIsInNlc3Npb25TdG9yYWdlIiwiZ2V0SXRlbSIsImNvbnNvbGUiLCJsb2ciLCJzZXRJdGVtIiwibGVuZ3RoIiwiaWQiLCJjaGFyYWN0ZXJzIiwiaSIsImNoYXJBdCIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsIm1ha2VpZCIsIndpbmRvdyIsImxvY2F0aW9uIiwicGF0aG5hbWUiLCJhdXRoZXJpemVkIl0sIm1hcHBpbmdzIjoibUJBSU8sSUNFZ0JBLEVERlZDLEVBQU8sU0FBQ0EsR0FBeUIsT0FBQUEsRUFBS0MsUUFBUSxrQkFBbUIsS0FFOUUsMkJBVUEsT0FSa0IsRUFBQUMsU0FBVyxTQUFDQyxHQUN0QkMsU0FBU0QsTUFBUUEsR0FHUCxFQUFBRSxhQUFlLFNBQUNDLEdBQzFCRixTQUFTRyxlQUdqQixFQVZBLEdFSk1DLEVBQWFKLFNBQVNLLHFCQUFxQixTQUFTLEdBRXpDLE1BQWRELEVBQ0NBLEVBQVdFLFdDRFhDLEVBQUlULFNBQVMsT0FFc0IsTUFBaENVLGVBQWVDLFFBQVEsT0FDdEJDLFFBQVFDLElBQUlILGVBQWVDLFFBQVEsT0FFdkNELGVBQWVJLFFBQVEsS0hhTCxTQUFDQyxHQUduQixJQUZBLElBQUlDLEVBQUssR0FDSEMsRUFBYSxpRUFDWEMsRUFBSSxFQUFHQSxFR2hCcUIsRUhnQlRBLElBQ3hCRixHQUFNQyxFQUFXRSxPQUFPQyxLQUFLQyxNQUFNRCxLQUFLRSxTQUFXTCxFQUFXRixTQUVqRSxPQUFPQyxFR25Cc0JPLElBRTdCWCxRQUFRQyxJQUFJVyxPQUFPQyxTQUFTQyxVQUVyQjVCLEVBQUssV0ZOWSxLQURMRCxFRVFWLENBQUM4QixZQUFZLElGUGJBLFdBQ0U3QixFQUFhLGtYQWFNLElBQXJCRCxFQUFNOEIsV0FDSjdCLEVBQWEsNGlCQURsQixHRVB1QixXRFA3QmMsUUFBUUMsSUFBSSxzQ0FDWix5REFBMEQsaUMiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5cclxuLyogR2VuZXJhbCBIVE1MIHV0aWxpdGllcyAqL1xyXG5cclxuZXhwb3J0IGNvbnN0IGh0bWwgPSAoaHRtbDogc3RyaW5nKTogc3RyaW5nID0+IGh0bWwucmVwbGFjZSgvXFxyP1xcbnxcXHJ8XFxzezR9L2csICcnKTtcclxuXHJcbmV4cG9ydCBjbGFzcyBET00ge1xyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgc2V0VGl0bGUgPSAodGl0bGU6IHN0cmluZyk6IHZvaWQgPT4ge1xyXG4gICAgICAgIGRvY3VtZW50LnRpdGxlID0gdGl0bGU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBzZXRDc3NJbXBvcnQgPSAodXJsOiBzdHJpbmcpOiB2b2lkID0+IHtcclxuICAgICAgICBkb2N1bWVudC5jcmVhdGVFbGVtZW50XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5cclxuXHJcbi8qIE1pc2NlbGxhbmVvdXMgdXRpbGl0aWVzICovXHJcblxyXG5leHBvcnQgY29uc3QgbWFrZWlkID0gKGxlbmd0aDogbnVtYmVyKTogc3RyaW5nID0+IHtcclxuICAgIGxldCBpZCA9ICcnO1xyXG4gICAgY29uc3QgY2hhcmFjdGVycyA9ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSc7XHJcbiAgICBmb3IobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcclxuICAgICAgIGlkICs9IGNoYXJhY3RlcnMuY2hhckF0KE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGNoYXJhY3RlcnMubGVuZ3RoKSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gaWQ7XHJcbiB9XHJcbiIsImltcG9ydCB7IGh0bWwgfSBmcm9tIFwiLi4vZnJhbWV3b3JrXCI7XHJcblxyXG5jbGFzcyBQcm9wcyB7XHJcbiAgICBhdXRoZXJpemVkOiBib29sZWFuID0gZmFsc2U7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBUb3BiYXIgPSAocHJvcHM6IFByb3BzKSA9PiB7XHJcbiAgICBpZihwcm9wcy5hdXRoZXJpemVkID09PSBmYWxzZSkge1xyXG4gICAgICAgIHJldHVybiBodG1sKC8qaHRtbCovYFxyXG4gICAgICAgIDxkaXYgaWQ9XCJ0b3BiYXJcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRpdGxlXCI+XHJcbiAgICAgICAgICAgICAgICA8aW1nIHNyYz1cIi4vYXNzZXRzL2Zhdmljb24tMzJ4MzIucG5nXCI+XHJcbiAgICAgICAgICAgICAgICA8aDE+RnJhbWV3b3JrIEFwcDwvaDE+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwicHVibGljXCI+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwicHJpdmF0ZVwiPlxyXG4gICAgICAgICAgICAgICAgPGEgaHJlZj1cIi9cIiBjbGFzcz1cImJ1dHRvblwiPkxvZ2luPC9hPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICBgKTtcclxuICAgIH1lbHNlIGlmKHByb3BzLmF1dGhlcml6ZWQgPT09IHRydWUpIHtcclxuICAgICAgICByZXR1cm4gaHRtbCgvKmh0bWwqL2BcclxuICAgICAgICA8ZGl2IGlkPVwidG9wYmFyXCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0aXRsZVwiPlxyXG4gICAgICAgICAgICAgICAgPGltZyBzcmM9XCIuL2Fzc2V0cy9mYXZpY29uLTMyeDMyLnBuZ1wiPlxyXG4gICAgICAgICAgICAgICAgPGgxPkZyYW1ld29yayBBcHA8L2gxPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInB1YmxpY1wiPlxyXG4gICAgICAgICAgICAgICAgPGEgaHJlZj1cIi9cIiBjbGFzcz1cImJ1dHRvblwiPk15IFByb2ZpbGU8L2E+XHJcbiAgICAgICAgICAgICAgICA8YSBocmVmPVwiL1wiIGNsYXNzPVwiYnV0dG9uXCI+TXkgUHJvZmlsZTwvYT5cclxuICAgICAgICAgICAgICAgIDxhIGhyZWY9XCIvXCIgY2xhc3M9XCJidXR0b25cIj5NeSBQcm9maWxlPC9hPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInByaXZhdGVcIj5cclxuICAgICAgICAgICAgICAgIDxhIGhyZWY9XCIvXCIgY2xhc3M9XCJidXR0b25cIj5NeSBQcm9maWxlPC9hPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICBgKTtcclxuICAgIH1cclxuICAgIFxyXG59O1xyXG4iLCJpbXBvcnQgeyBBcHAgfSBmcm9tIFwiLi9hcHBcIjtcblxuY29uc3QgaHRtbEFwcFRhZyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCd4LWFwcCcpWzBdO1xuXG5pZihodG1sQXBwVGFnICE9IG51bGwpIHtcbiAgICBodG1sQXBwVGFnLmlubmVySFRNTCA9IEFwcCgpO1xufWVsc2Uge1xuICAgIGNvbnNvbGUubG9nKCclYzx4LWFwcD48L3gtYXBwPiVjIGlzIG5vdCBkZWZpbmVkIScsXG4gICAgJ2NvbG9yOiB3aGl0ZTsgYmFja2dyb3VuZC1jb2xvcjogYmx1ZTsgZm9udC1zaXplOiAxLjJlbScsICdjb2xvcjogcmVkOyBmb250LXNpemU6IDEuMmVtJyk7XG59XG5cbiIsImltcG9ydCB7IGh0bWwsIERPTSwgbWFrZWlkIH0gZnJvbSAnLi9mcmFtZXdvcmsnO1xyXG5pbXBvcnQgeyBUb3BiYXIgfSBmcm9tICcuL2NvbXBvbmVudHMvdG9wYmFyJztcclxuXHJcbmV4cG9ydCBjb25zdCBBcHAgPSAoKTogc3RyaW5nID0+IHtcclxuICAgIERPTS5zZXRUaXRsZSgnQXBwJyk7XHJcblxyXG4gICAgaWYoc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgnaWQnKSAhPSBudWxsKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgnaWQnKSk7XHJcbiAgICB9XHJcbiAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCdpZCcsIG1ha2VpZCg4KSk7XHJcblxyXG4gICAgY29uc29sZS5sb2cod2luZG93LmxvY2F0aW9uLnBhdGhuYW1lKVxyXG5cclxuICAgIHJldHVybiBodG1sKGBcclxuICAgICR7VG9wYmFyKHthdXRoZXJpemVkOiBmYWxzZX0pfVxyXG4gICAgYCk7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==