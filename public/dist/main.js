(()=>{"use strict";var n="frameworkappauth",e=function(n){return n.replace(/\r?\n|\r|\s{4}/g,"")},t=function(){function n(){}return n.setTitle=function(n){document.title=n},n.setCssImport=function(n){document.createElement},n}(),i=function(n){return!1===n.authorized?e('\n        <div id="topbar">\n            <div class="title">\n                <img src="./assets/favicon-32x32.png">\n                <h1>Framework App</h1>\n            </div>\n            <div class="public">\n            </div>\n            <div class="private">\n                <a href="/" class="button">Login</a>\n            </div>\n        </div>\n        '):!0===n.authorized?e('\n        <div id="topbar">\n            <div class="title">\n                <img src="./assets/favicon-32x32.png">\n                <h1>Framework App</h1>\n            </div>\n            <div class="public">\n                <a href="/" class="button">Front page</a>\n                <a href="/feed" class="button">My feed</a>\n                <a href="/friends" class="button">Friends</a>\n            </div>\n            <div class="private">\n                <a href="/" class="button">My Profile</a>\n            </div>\n        </div>\n        '):void 0},a=document.getElementsByTagName("x-app")[0];null!=a?a.innerHTML=function(){switch(t.setTitle("App"),window.location.pathname){case"/":case"/login":default:return e(""+(a={authorized:null!=sessionStorage.getItem(n)&&"0"!==sessionStorage.getItem(n)},t.setTitle("Homepage"),a.authorized?e("\n        "+i({authorized:!0})+"\n        "):e("\n        "+i({authorized:!1})+"\n        "+e('\n    <div id="loginform">\n        <input id="username" type="text" placeholder="Username">\n        <br>\n        <input id="password" type="text" placeholder="Password">\n        <br>\n        <input id="login" type="button" value="Login">\n    </div>\n    ')+"\n        ")))}var a}():console.log("%c<x-app></x-app>%c is not defined!","color: white; background-color: blue; font-size: 1.2em","color: red; font-size: 1.2em")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wdWJsaWMvLi9zcmMvYXV0aC50cyIsIndlYnBhY2s6Ly9wdWJsaWMvLi9zcmMvZnJhbWV3b3JrLnRzIiwid2VicGFjazovL3B1YmxpYy8uL3NyYy9jb21wb25lbnRzL3RvcGJhci50cyIsIndlYnBhY2s6Ly9wdWJsaWMvLi9zcmMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vcHVibGljLy4vc3JjL2FwcC50cyIsIndlYnBhY2s6Ly9wdWJsaWMvLi9zcmMvcm91dGVzL2xhbmRpbmcudHMiLCJ3ZWJwYWNrOi8vcHVibGljLy4vc3JjL2NvbXBvbmVudHMvbG9naW5mb3JtLnRzIl0sIm5hbWVzIjpbImF1dGhLZXkiLCJodG1sIiwicmVwbGFjZSIsInNldFRpdGxlIiwidGl0bGUiLCJkb2N1bWVudCIsInNldENzc0ltcG9ydCIsInVybCIsImNyZWF0ZUVsZW1lbnQiLCJUb3BiYXIiLCJwcm9wcyIsImF1dGhvcml6ZWQiLCJodG1sQXBwVGFnIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJpbm5lckhUTUwiLCJET00iLCJ3aW5kb3ciLCJsb2NhdGlvbiIsInBhdGhuYW1lIiwic2Vzc2lvblN0b3JhZ2UiLCJnZXRJdGVtIiwiQXBwIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Im1CQUdBLElBQU1BLEVBQVUsbUJDQ0hDLEVBQU8sU0FBQ0EsR0FBeUIsT0FBQUEsRUFBS0MsUUFBUSxrQkFBbUIsS0FFOUUsMkJBVUEsT0FSa0IsRUFBQUMsU0FBVyxTQUFDQyxHQUN0QkMsU0FBU0QsTUFBUUEsR0FHUCxFQUFBRSxhQUFlLFNBQUNDLEdBQzFCRixTQUFTRyxlQUdqQixFQVZBLEdDQWFDLEVBQVMsU0FBQ0MsR0FDbkIsT0FBd0IsSUFBckJBLEVBQU1DLFdBQ0VWLEVBQWEsa1hBYU0sSUFBckJTLEVBQU1DLFdBQ0pWLEVBQWEsaWpCQURsQixHQ25CSlcsRUFBYVAsU0FBU1EscUJBQXFCLFNBQVMsR0FFekMsTUFBZEQsRUFDQ0EsRUFBV0UsVUNESSxXQUdmLE9BRkFDLEVBQUlaLFNBQVMsT0FFTmEsT0FBT0MsU0FBU0MsVUFDbkIsSUFBSyxJQUdMLElBQUssU0FHTCxRQUNJLE9BQU9qQixFQUFLLElDTkFTLEVETVcsQ0FBQ0MsV0pUTSxNQUFuQ1EsZUFBZUMsUUFBUXBCLElBQXdELE1BQXBDbUIsZUFBZUMsUUFBUXBCLElLSXJFZSxFQUFJWixTQUFTLFlBQ1ZPLEVBQU1DLFdBQ0VWLEVBQUssYUFDVlEsRUFBTyxDQUFDRSxZQUFZLElBQU0sY0FHckJWLEVBQUssYUFDVlEsRUFBTyxDQUFDRSxZQUFZLElBQU8sYUNkMUJWLEVBQWEsd1FEZUgsZ0JBVEUsSUFBQ1MsRUZKR1csR0FFdkJDLFFBQVFDLElBQUksc0NBQ1oseURBQTBELGlDIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLyogQWxsIHRoaXMgbWF5IGJlIG92ZXJ3cml0dGVuICovXHJcblxyXG5jb25zdCBhdXRoS2V5ID0gJ2ZyYW1ld29ya2FwcGF1dGgnO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNoZWNrQ2xpZW50QXV0aCA9ICgpOiBib29sZWFuID0+IHtcclxuICAgIGlmKHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oYXV0aEtleSkgIT0gbnVsbCAmJiBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKGF1dGhLZXkpICE9PSAnMCcpIHtcclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1lbHNlIHtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBzZXRDbGllbnRBdXRoID0gKCk6IHZvaWQgPT4ge1xyXG4gICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbShhdXRoS2V5LCAndHJ1ZScpO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgcmVtb3ZlQ2xpZW50QXV0aCA9ICgpOiB2b2lkID0+IHtcclxuICAgIHNlc3Npb25TdG9yYWdlLnJlbW92ZUl0ZW0oYXV0aEtleSk7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBjbGVhclNlc3Npb24gPSAoKTogdm9pZCA9PiB7XHJcbiAgICBzZXNzaW9uU3RvcmFnZS5jbGVhcigpO1xyXG59XHJcblxyXG5cclxuIiwiXHJcblxyXG4vKiBHZW5lcmFsIEhUTUwgdXRpbGl0aWVzICovXHJcblxyXG5leHBvcnQgY29uc3QgaHRtbCA9IChodG1sOiBzdHJpbmcpOiBzdHJpbmcgPT4gaHRtbC5yZXBsYWNlKC9cXHI/XFxufFxccnxcXHN7NH0vZywgJycpO1xyXG5cclxuZXhwb3J0IGNsYXNzIERPTSB7XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBzZXRUaXRsZSA9ICh0aXRsZTogc3RyaW5nKTogdm9pZCA9PiB7XHJcbiAgICAgICAgZG9jdW1lbnQudGl0bGUgPSB0aXRsZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIHNldENzc0ltcG9ydCA9ICh1cmw6IHN0cmluZyk6IHZvaWQgPT4ge1xyXG4gICAgICAgIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnRcclxuICAgIH1cclxuXHJcbn1cclxuXHJcblxyXG5cclxuLyogTWlzY2VsbGFuZW91cyB1dGlsaXRpZXMgKi9cclxuXHJcbmV4cG9ydCBjb25zdCBtYWtlaWQgPSAobGVuZ3RoOiBudW1iZXIpOiBzdHJpbmcgPT4ge1xyXG4gICAgbGV0IGlkID0gJyc7XHJcbiAgICBjb25zdCBjaGFyYWN0ZXJzID0gJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5JztcclxuICAgIGZvcihsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xyXG4gICAgICAgaWQgKz0gY2hhcmFjdGVycy5jaGFyQXQoTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogY2hhcmFjdGVycy5sZW5ndGgpKTtcclxuICAgIH1cclxuICAgIHJldHVybiBpZDtcclxuIH1cclxuIiwiaW1wb3J0IHsgaHRtbCB9IGZyb20gXCIuLi9mcmFtZXdvcmtcIjtcclxuXHJcbmNsYXNzIFByb3BzIHtcclxuICAgIGF1dGhvcml6ZWQ6IGJvb2xlYW4gPSBmYWxzZTtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IFRvcGJhciA9IChwcm9wczogUHJvcHMpID0+IHtcclxuICAgIGlmKHByb3BzLmF1dGhvcml6ZWQgPT09IGZhbHNlKSB7XHJcbiAgICAgICAgcmV0dXJuIGh0bWwoLypodG1sKi9gXHJcbiAgICAgICAgPGRpdiBpZD1cInRvcGJhclwiPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGl0bGVcIj5cclxuICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiLi9hc3NldHMvZmF2aWNvbi0zMngzMi5wbmdcIj5cclxuICAgICAgICAgICAgICAgIDxoMT5GcmFtZXdvcmsgQXBwPC9oMT5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwdWJsaWNcIj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwcml2YXRlXCI+XHJcbiAgICAgICAgICAgICAgICA8YSBocmVmPVwiL1wiIGNsYXNzPVwiYnV0dG9uXCI+TG9naW48L2E+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIGApO1xyXG4gICAgfWVsc2UgaWYocHJvcHMuYXV0aG9yaXplZCA9PT0gdHJ1ZSkge1xyXG4gICAgICAgIHJldHVybiBodG1sKC8qaHRtbCovYFxyXG4gICAgICAgIDxkaXYgaWQ9XCJ0b3BiYXJcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRpdGxlXCI+XHJcbiAgICAgICAgICAgICAgICA8aW1nIHNyYz1cIi4vYXNzZXRzL2Zhdmljb24tMzJ4MzIucG5nXCI+XHJcbiAgICAgICAgICAgICAgICA8aDE+RnJhbWV3b3JrIEFwcDwvaDE+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwicHVibGljXCI+XHJcbiAgICAgICAgICAgICAgICA8YSBocmVmPVwiL1wiIGNsYXNzPVwiYnV0dG9uXCI+RnJvbnQgcGFnZTwvYT5cclxuICAgICAgICAgICAgICAgIDxhIGhyZWY9XCIvZmVlZFwiIGNsYXNzPVwiYnV0dG9uXCI+TXkgZmVlZDwvYT5cclxuICAgICAgICAgICAgICAgIDxhIGhyZWY9XCIvZnJpZW5kc1wiIGNsYXNzPVwiYnV0dG9uXCI+RnJpZW5kczwvYT5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwcml2YXRlXCI+XHJcbiAgICAgICAgICAgICAgICA8YSBocmVmPVwiL1wiIGNsYXNzPVwiYnV0dG9uXCI+TXkgUHJvZmlsZTwvYT5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgYCk7XHJcbiAgICB9XHJcbiAgICBcclxufTtcclxuIiwiaW1wb3J0IHsgQXBwIH0gZnJvbSBcIi4vYXBwXCI7XG5cbmNvbnN0IGh0bWxBcHBUYWcgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgneC1hcHAnKVswXTtcblxuaWYoaHRtbEFwcFRhZyAhPSBudWxsKSB7XG4gICAgaHRtbEFwcFRhZy5pbm5lckhUTUwgPSBBcHAoKTtcbn1lbHNlIHtcbiAgICBjb25zb2xlLmxvZygnJWM8eC1hcHA+PC94LWFwcD4lYyBpcyBub3QgZGVmaW5lZCEnLFxuICAgICdjb2xvcjogd2hpdGU7IGJhY2tncm91bmQtY29sb3I6IGJsdWU7IGZvbnQtc2l6ZTogMS4yZW0nLCAnY29sb3I6IHJlZDsgZm9udC1zaXplOiAxLjJlbScpO1xufVxuXG4iLCJpbXBvcnQgeyBjaGVja0NsaWVudEF1dGgsIHNldENsaWVudEF1dGggfSBmcm9tICcuL2F1dGgnO1xyXG5pbXBvcnQgeyBodG1sLCBET00gfSBmcm9tICcuL2ZyYW1ld29yayc7XHJcbmltcG9ydCB7IExhbmRpbmcgfSBmcm9tICcuL3JvdXRlcy9sYW5kaW5nJztcclxuXHJcbmV4cG9ydCBjb25zdCBBcHAgPSAoKTogc3RyaW5nID0+IHtcclxuICAgIERPTS5zZXRUaXRsZSgnQXBwJyk7XHJcblxyXG4gICAgc3dpdGNoKHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZSkge1xyXG4gICAgICAgIGNhc2UgJy8nOlxyXG4gICAgICAgICAgICByZXR1cm4gaHRtbChgJHtMYW5kaW5nKHthdXRob3JpemVkOiBjaGVja0NsaWVudEF1dGgoKX0pfWApO1xyXG5cclxuICAgICAgICBjYXNlICcvbG9naW4nOlxyXG4gICAgICAgICAgICByZXR1cm4gaHRtbChgJHtMYW5kaW5nKHthdXRob3JpemVkOiBjaGVja0NsaWVudEF1dGgoKX0pfWApO1xyXG5cclxuICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICByZXR1cm4gaHRtbChgJHtMYW5kaW5nKHthdXRob3JpemVkOiBjaGVja0NsaWVudEF1dGgoKX0pfWApO1xyXG4gICAgfVxyXG59XHJcbiIsImltcG9ydCB7IGh0bWwsIERPTSB9IGZyb20gJy4uL2ZyYW1ld29yayc7XHJcbmltcG9ydCB7IFRvcGJhciB9IGZyb20gJy4uL2NvbXBvbmVudHMvdG9wYmFyJztcclxuaW1wb3J0IHsgTG9naW5mb3JtIH0gZnJvbSAnLi4vY29tcG9uZW50cy9sb2dpbmZvcm0nO1xyXG5cclxuY2xhc3MgUHJvcHMge1xyXG4gICAgYXV0aG9yaXplZDogYm9vbGVhbiA9IGZhbHNlO1xyXG59XHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IExhbmRpbmcgPSAocHJvcHM6IFByb3BzKSA9PiB7XHJcbiAgICBET00uc2V0VGl0bGUoJ0hvbWVwYWdlJyk7XHJcbiAgICBpZihwcm9wcy5hdXRob3JpemVkKSB7XHJcbiAgICAgICAgcmV0dXJuIGh0bWwoYFxyXG4gICAgICAgICR7VG9wYmFyKHthdXRob3JpemVkOiB0cnVlfSl9XHJcbiAgICAgICAgYCk7XHJcbiAgICB9ZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIGh0bWwoYFxyXG4gICAgICAgICR7VG9wYmFyKHthdXRob3JpemVkOiBmYWxzZX0pfVxyXG4gICAgICAgICR7TG9naW5mb3JtKCl9XHJcbiAgICAgICAgYCk7XHJcbiAgICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgaHRtbCB9IGZyb20gXCIuLi9mcmFtZXdvcmtcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBMb2dpbmZvcm0gPSAoKSA9PiB7XHJcbiAgICByZXR1cm4gaHRtbCgvKmh0bWwqL2BcclxuICAgIDxkaXYgaWQ9XCJsb2dpbmZvcm1cIj5cclxuICAgICAgICA8aW5wdXQgaWQ9XCJ1c2VybmFtZVwiIHR5cGU9XCJ0ZXh0XCIgcGxhY2Vob2xkZXI9XCJVc2VybmFtZVwiPlxyXG4gICAgICAgIDxicj5cclxuICAgICAgICA8aW5wdXQgaWQ9XCJwYXNzd29yZFwiIHR5cGU9XCJ0ZXh0XCIgcGxhY2Vob2xkZXI9XCJQYXNzd29yZFwiPlxyXG4gICAgICAgIDxicj5cclxuICAgICAgICA8aW5wdXQgaWQ9XCJsb2dpblwiIHR5cGU9XCJidXR0b25cIiB2YWx1ZT1cIkxvZ2luXCI+XHJcbiAgICA8L2Rpdj5cclxuICAgIGApO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=