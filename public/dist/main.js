(()=>{"use strict";var n="frameworkappauth",e=function(){return null!=sessionStorage.getItem(n)&&"0"!==sessionStorage.getItem(n)},t=function(){function n(){}return n.setTitle=function(n){document.title=n},n.setCssImport=function(n){var e=document.createElement("link");e.rel="stylesheet",e.href=n,document.head.appendChild(e)},n}(),i=function(n){return n.replace(/\r?\n|\r|\s{4}/g,"")},o=function(n){return!1===n.authorized?i('\n        <div id="topbar">\n            <div class="title">\n                <img src="./assets/favicon-32x32.png">\n                <h1>Framework App</h1>\n            </div>\n            <div class="public">\n            </div>\n            <div class="private">\n                <a href="/" class="button">Login</a>\n            </div>\n        </div>\n        '):!0===n.authorized?i('\n        <div id="topbar">\n            <div class="title">\n                <img src="./assets/favicon-32x32.png">\n                <h1>Framework App</h1>\n            </div>\n            <div class="public">\n                <a href="/" class="button">Front page</a>\n                <a href="/feed" class="button">My feed</a>\n                <a href="/friends" class="button">Friends</a>\n            </div>\n            <div class="private">\n                <a href="/" class="button">My Profile</a>\n            </div>\n        </div>\n        '):void 0},r=function(n){return t.setTitle("Homepage"),n.authorized?i("\n        "+o({authorized:!0})+"\n        "):i("\n        "+o({authorized:!1})+"\n        "+i('\n    <div id="loginpage">\n        <div id="loginform">\n            <input class="loginform" id="username" type="text" placeholder="Username">\n            <br>\n            <input class="loginform" id="password" type="password" placeholder="Password">\n            <br>\n            <input class="loginform" id="login" type="button" value="Login">\n        </div>\n    </div>\n    ')+"\n        ")},a=document.getElementsByTagName("x-app")[0];null!=a?a.innerHTML=function(){switch(t.setTitle("App"),window.location.pathname){case"/":case"/login":return i(""+r({authorized:e()}));case"/todo":return i(""+o({authorized:e()})+(fetch("http://gamer/todo.page").then((function(n){return n.text()})).then((function(n){return document.write(n)})),i("\n\n    ")));default:return i(""+r({authorized:e()}))}}():console.log("%c<x-app></x-app>%c is not defined!","color: white; background-color: blue; font-size: 1.2em","color: red; font-size: 1.2em")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,